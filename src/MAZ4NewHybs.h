/* Prototypes for MargAllocZ functions  */// we have to be able to access all the data as well as the nominated individual,// so we have a pointer to C, and then pass in an int Indiv, that will tell us// which individual we are dealing with.  This will have to be set before entering the // function each time. typedef struct{	hyb_chain *C;	int Indiv;} MAZ_var_struct;// declare the gBaumProbs arrayGLOB double ***gBaumProbs;GLOB int *gBaumIdx; // global variable to have an array of 1,2,3,4,...NumLoc*2GLOB int *gBaumZOutputParm; // for the output parameter to MargAllocZ// function prototypesextern double  MargAllocZ(	int NumZs,	int *idx,	int Comp0,	int Comp1,	double Alpha,	double Beta,	double (*MAZ_DataProb)(MAZ_var_struct *Vars,int t,int j), 	double (*RandUnif)(),	MAZ_var_struct *Vars,	int *NewAlloc	);extern double MargAllocDataProb( MAZ_var_struct *Vars,int t,int j);void AllocateToMargAllocStuff(int NumZs);void InsertZsToIndivs(int *Zs, hyb_chain *C, int i);double DoubleRanf(void);